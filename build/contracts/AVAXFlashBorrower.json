{
  "contractName": "AVAXFlashBorrower",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "avaxFlashLender",
      "outputs": [
        {
          "internalType": "contract AVAXFlashLender",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "debt",
          "type": "uint256"
        }
      ],
      "name": "executeOnAVAXFlashLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"avaxFlashLender\",\"outputs\":[{\"internalType\":\"contract AVAXFlashLender\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debt\",\"type\":\"uint256\"}],\"name\":\"executeOnAVAXFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/VijayL/Documents/Blockchain/MyProjects/Encode_Club_hackathon/avalanche/truffle/contracts/AVAXFlashBorrower.sol\":\"AVAXFlashBorrower\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/VijayL/Documents/Blockchain/MyProjects/Encode_Club_hackathon/avalanche/truffle/contracts/AVAXFlashBorrower.sol\":{\"keccak256\":\"0x66a120844aaf3ed261e67312825002c1d42586839604669b6cfb1f91285002a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be9991c3919bc486004e349bcc86c965e5d5909dcb26140f18eee777aa0371a3\",\"dweb:/ipfs/QmV8h8c8HFWtsmtKJhAkjsZmfYtFV6LG8oRd4LDzYGMoZe\"]},\"/Users/VijayL/Documents/Blockchain/MyProjects/Encode_Club_hackathon/avalanche/truffle/contracts/AVAXFlashLender.sol\":{\"keccak256\":\"0xe4bd7e930c6cee5117843c58c6b0a21e066abc759ce19d5940bb706cf3b0b156\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8e3cdda225a9693265b36ad571a31b80a7bedff53bce2351d42f1a996c2e59\",\"dweb:/ipfs/QmVvpgzWLMHfoBG6V1eofM42dbkekB1HajKKybKDYSwtjB\"]},\"/Users/VijayL/Documents/Blockchain/MyProjects/Encode_Club_hackathon/avalanche/truffle/contracts/IAVAXFlashBorrower.sol\":{\"keccak256\":\"0x80f3a3826ba9f5c7ce416a602fa3766c284b4ba1fca77687c4017ecbbe17be29\",\"urls\":[\"bzz-raw://c80bc21f58243a24837bdf8c46bc3c6b9d3a116e7befc02c639751a863a88d89\",\"dweb:/ipfs/QmcQCPqFS2kgJTENvPieoUVYhEYMSdgJtQAxbcQLdvVnp8\"]},\"/Users/VijayL/Documents/Blockchain/MyProjects/Encode_Club_hackathon/avalanche/truffle/contracts/SafeMath.sol\":{\"keccak256\":\"0xac33961f76a6582710704ca452b4f1b32d07b2db95f58e9011300a5590065ae9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b896754ac4b6f0832549cc5d555fb274daf4c31ca4a033fd31a662b26d6476e\",\"dweb:/ipfs/Qmd94C6CVpiW77Q6DaszN64gjWZx86NUTRgM2PimLrNJKL\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xf7c39c7e6d06ed3bda90cfefbcbf2ddc32c599c3d6721746546ad64946efccaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb57a28e189cd8b05748db44bdd51d608e6f1364dd1b35ad921e1bc82c10631e\",\"dweb:/ipfs/QmaWWTBbVu2pRR9XUbE4iC159NoP59cRF9ZJwhf4ghFN9i\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b95e56c1640d0ef789fc5c16269e141e992f6c8ac97cc6d377bd3825e9cab182\",\"dweb:/ipfs/QmVzaxJZY51EhagrcNnkxoU6Uq17RhATe7aHvtkC6wUkgK\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b610a88806100db6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80634b8a352914610067578063715018a614610083578063740b40e91461008d57806387806593146100ab5780638da5cb5b146100c7578063f2fde38b146100e5575b600080fd5b610081600480360381019061007c919061070a565b610101565b005b61008b61021b565b005b61009561036e565b6040516100a29190610915565b60405180910390f35b6100c560048036038101906100c09190610746565b610386565b005b6100cf6104af565b6040516100dc91906108d1565b60405180910390f35b6100ff60048036038101906100fa91906106e1565b6104d8565b005b61010961069a565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610196576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018d90610970565b60405180910390fd5b73a1ba1e7dd7ad2c72a25650ceecaa617319d5cffb73ffffffffffffffffffffffffffffffffffffffff1663780eacf983836040518363ffffffff1660e01b81526004016101e59291906108ec565b600060405180830381600087803b1580156101ff57600080fd5b505af1158015610213573d6000803e3d6000fd5b505050505050565b61022361069a565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a790610970565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b73a1ba1e7dd7ad2c72a25650ceecaa617319d5cffb81565b73a1ba1e7dd7ad2c72a25650ceecaa617319d5cffb73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610950565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b373a1ba1e7dd7ad2c72a25650ceecaa617319d5cffb836040518363ffffffff1660e01b81526004016104579291906108ec565b602060405180830381600087803b15801561047157600080fd5b505af1158015610485573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a99190610795565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104e061069a565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461056d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056490610970565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d490610930565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000813590506106b181610a0d565b92915050565b6000815190506106c681610a24565b92915050565b6000813590506106db81610a3b565b92915050565b6000602082840312156106f357600080fd5b6000610701848285016106a2565b91505092915050565b6000806040838503121561071d57600080fd5b600061072b858286016106a2565b925050602061073c858286016106cc565b9150509250929050565b60008060006060848603121561075b57600080fd5b6000610769868287016106a2565b935050602061077a868287016106cc565b925050604061078b868287016106cc565b9150509250925092565b6000602082840312156107a757600080fd5b60006107b5848285016106b7565b91505092915050565b6107c7816109a1565b82525050565b6107d6816109e9565b82525050565b60006107e9602683610990565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061084f602083610990565b91507f6f6e6c79206c656e64657220636f6e74726163742063616e20657865637574656000830152602082019050919050565b600061088f602083610990565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6108cb816109df565b82525050565b60006020820190506108e660008301846107be565b92915050565b600060408201905061090160008301856107be565b61090e60208301846108c2565b9392505050565b600060208201905061092a60008301846107cd565b92915050565b60006020820190508181036000830152610949816107dc565b9050919050565b6000602082019050818103600083015261096981610842565b9050919050565b6000602082019050818103600083015261098981610882565b9050919050565b600082825260208201905092915050565b60006109ac826109bf565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109f4826109fb565b9050919050565b6000610a06826109bf565b9050919050565b610a16816109a1565b8114610a2157600080fd5b50565b610a2d816109b3565b8114610a3857600080fd5b50565b610a44816109df565b8114610a4f57600080fd5b5056fea2646970667358221220ba68b866c45da0183ac7798d6745c8a2967fb41fba11531858e39a7c2ef9b50964736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80634b8a352914610067578063715018a614610083578063740b40e91461008d57806387806593146100ab5780638da5cb5b146100c7578063f2fde38b146100e5575b600080fd5b610081600480360381019061007c919061070a565b610101565b005b61008b61021b565b005b61009561036e565b6040516100a29190610915565b60405180910390f35b6100c560048036038101906100c09190610746565b610386565b005b6100cf6104af565b6040516100dc91906108d1565b60405180910390f35b6100ff60048036038101906100fa91906106e1565b6104d8565b005b61010961069a565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610196576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018d90610970565b60405180910390fd5b73a1ba1e7dd7ad2c72a25650ceecaa617319d5cffb73ffffffffffffffffffffffffffffffffffffffff1663780eacf983836040518363ffffffff1660e01b81526004016101e59291906108ec565b600060405180830381600087803b1580156101ff57600080fd5b505af1158015610213573d6000803e3d6000fd5b505050505050565b61022361069a565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a790610970565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b73a1ba1e7dd7ad2c72a25650ceecaa617319d5cffb81565b73a1ba1e7dd7ad2c72a25650ceecaa617319d5cffb73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610950565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b373a1ba1e7dd7ad2c72a25650ceecaa617319d5cffb836040518363ffffffff1660e01b81526004016104579291906108ec565b602060405180830381600087803b15801561047157600080fd5b505af1158015610485573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a99190610795565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104e061069a565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461056d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056490610970565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d490610930565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000813590506106b181610a0d565b92915050565b6000815190506106c681610a24565b92915050565b6000813590506106db81610a3b565b92915050565b6000602082840312156106f357600080fd5b6000610701848285016106a2565b91505092915050565b6000806040838503121561071d57600080fd5b600061072b858286016106a2565b925050602061073c858286016106cc565b9150509250929050565b60008060006060848603121561075b57600080fd5b6000610769868287016106a2565b935050602061077a868287016106cc565b925050604061078b868287016106cc565b9150509250925092565b6000602082840312156107a757600080fd5b60006107b5848285016106b7565b91505092915050565b6107c7816109a1565b82525050565b6107d6816109e9565b82525050565b60006107e9602683610990565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061084f602083610990565b91507f6f6e6c79206c656e64657220636f6e74726163742063616e20657865637574656000830152602082019050919050565b600061088f602083610990565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6108cb816109df565b82525050565b60006020820190506108e660008301846107be565b92915050565b600060408201905061090160008301856107be565b61090e60208301846108c2565b9392505050565b600060208201905061092a60008301846107cd565b92915050565b60006020820190508181036000830152610949816107dc565b9050919050565b6000602082019050818103600083015261096981610842565b9050919050565b6000602082019050818103600083015261098981610882565b9050919050565b600082825260208201905092915050565b60006109ac826109bf565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109f4826109fb565b9050919050565b6000610a06826109bf565b9050919050565b610a16816109a1565b8114610a2157600080fd5b50565b610a2d816109b3565b8114610a3857600080fd5b50565b610a44816109df565b8114610a4f57600080fd5b5056fea2646970667358221220ba68b866c45da0183ac7798d6745c8a2967fb41fba11531858e39a7c2ef9b50964736f6c634300060c0033",
  "sourceMap": "410:1387:0:-:0;;;;;;;;;;;;;882:17:11;902:12;:10;;;:12;;:::i;:::-;882:32;;933:9;924:6;;:18;;;;;;;;;;;;;;;;;;990:9;957:43;;986:1;957:43;;;;;;;;;;;;848:159;410:1387:0;;598:104:10;651:15;685:10;678:17;;598:104;:::o;410:1387:0:-;;;;;;;",
  "deployedSourceMap": "410:1387:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;818:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1706:145:11;;;:::i;:::-;;576:118:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1122:673;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1083:77:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2000:240;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;818:128:0;1297:12:11;:10;:12::i;:::-;1287:22;;:6;;;;;;;;;;:22;;;1279:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;650:42:0::1;895:29;;;925:5;932:6;895:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;818:128:::0;;:::o;1706:145:11:-;1297:12;:10;:12::i;:::-;1287:22;;:6;;;;;;;;;;:22;;;1279:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1812:1:::1;1775:40;;1796:6;::::0;::::1;;;;;;;;1775:40;;;;;;;;;;;;1842:1;1825:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1706:145::o:0;576:118:0:-;650:42;576:118;:::o;1122:673::-;650:42;1226:38;;:10;:38;;;1218:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;1742:5;1735:21;;;650:42;1783:4;1735:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1122:673;;;:::o;1083:77:11:-;1121:7;1147:6;;;;;;;;;;;1140:13;;1083:77;:::o;2000:240::-;1297:12;:10;:12::i;:::-;1287:22;;:6;;;;;;;;;;:22;;;1279:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2108:1:::1;2088:22;;:8;:22;;;;2080:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2197:8;2168:38;;2189:6;::::0;::::1;;;;;;;;2168:38;;;;;;;;;;;;2225:8;2216:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2000:240:::0;:::o;598:104:10:-;651:15;685:10;678:17;;598:104;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;57:78;;;;:::o;142:128::-;;223:6;217:13;208:22;;235:30;259:5;235:30;:::i;:::-;202:68;;;;:::o;277:130::-;;357:6;344:20;335:29;;369:33;396:5;369:33;:::i;:::-;329:78;;;;:::o;414:241::-;;518:2;506:9;497:7;493:23;489:32;486:2;;;534:1;531;524:12;486:2;569:1;586:53;631:7;622:6;611:9;607:22;586:53;:::i;:::-;576:63;;548:97;480:175;;;;:::o;662:366::-;;;783:2;771:9;762:7;758:23;754:32;751:2;;;799:1;796;789:12;751:2;834:1;851:53;896:7;887:6;876:9;872:22;851:53;:::i;:::-;841:63;;813:97;941:2;959:53;1004:7;995:6;984:9;980:22;959:53;:::i;:::-;949:63;;920:98;745:283;;;;;:::o;1035:491::-;;;;1173:2;1161:9;1152:7;1148:23;1144:32;1141:2;;;1189:1;1186;1179:12;1141:2;1224:1;1241:53;1286:7;1277:6;1266:9;1262:22;1241:53;:::i;:::-;1231:63;;1203:97;1331:2;1349:53;1394:7;1385:6;1374:9;1370:22;1349:53;:::i;:::-;1339:63;;1310:98;1439:2;1457:53;1502:7;1493:6;1482:9;1478:22;1457:53;:::i;:::-;1447:63;;1418:98;1135:391;;;;;:::o;1533:257::-;;1645:2;1633:9;1624:7;1620:23;1616:32;1613:2;;;1661:1;1658;1651:12;1613:2;1696:1;1713:61;1766:7;1757:6;1746:9;1742:22;1713:61;:::i;:::-;1703:71;;1675:105;1607:183;;;;:::o;1797:113::-;1880:24;1898:5;1880:24;:::i;:::-;1875:3;1868:37;1862:48;;:::o;1917:172::-;2023:60;2077:5;2023:60;:::i;:::-;2018:3;2011:73;2005:84;;:::o;2097:375::-;;2257:67;2321:2;2316:3;2257:67;:::i;:::-;2250:74;;2357:34;2353:1;2348:3;2344:11;2337:55;2426:8;2421:2;2416:3;2412:12;2405:30;2463:2;2458:3;2454:12;2447:19;;2243:229;;;:::o;2481:332::-;;2641:67;2705:2;2700:3;2641:67;:::i;:::-;2634:74;;2741:34;2737:1;2732:3;2728:11;2721:55;2804:2;2799:3;2795:12;2788:19;;2627:186;;;:::o;2822:332::-;;2982:67;3046:2;3041:3;2982:67;:::i;:::-;2975:74;;3082:34;3078:1;3073:3;3069:11;3062:55;3145:2;3140:3;3136:12;3129:19;;2968:186;;;:::o;3162:113::-;3245:24;3263:5;3245:24;:::i;:::-;3240:3;3233:37;3227:48;;:::o;3282:222::-;;3409:2;3398:9;3394:18;3386:26;;3423:71;3491:1;3480:9;3476:17;3467:6;3423:71;:::i;:::-;3380:124;;;;:::o;3511:333::-;;3666:2;3655:9;3651:18;3643:26;;3680:71;3748:1;3737:9;3733:17;3724:6;3680:71;:::i;:::-;3762:72;3830:2;3819:9;3815:18;3806:6;3762:72;:::i;:::-;3637:207;;;;;:::o;3851:268::-;;4001:2;3990:9;3986:18;3978:26;;4015:94;4106:1;4095:9;4091:17;4082:6;4015:94;:::i;:::-;3972:147;;;;:::o;4126:416::-;;4326:2;4315:9;4311:18;4303:26;;4376:9;4370:4;4366:20;4362:1;4351:9;4347:17;4340:47;4401:131;4527:4;4401:131;:::i;:::-;4393:139;;4297:245;;;:::o;4549:416::-;;4749:2;4738:9;4734:18;4726:26;;4799:9;4793:4;4789:20;4785:1;4774:9;4770:17;4763:47;4824:131;4950:4;4824:131;:::i;:::-;4816:139;;4720:245;;;:::o;4972:416::-;;5172:2;5161:9;5157:18;5149:26;;5222:9;5216:4;5212:20;5208:1;5197:9;5193:17;5186:47;5247:131;5373:4;5247:131;:::i;:::-;5239:139;;5143:245;;;:::o;5396:163::-;;5511:6;5506:3;5499:19;5548:4;5543:3;5539:14;5524:29;;5492:67;;;;:::o;5567:91::-;;5629:24;5647:5;5629:24;:::i;:::-;5618:35;;5612:46;;;:::o;5665:85::-;;5738:5;5731:13;5724:21;5713:32;;5707:43;;;:::o;5757:121::-;;5830:42;5823:5;5819:54;5808:65;;5802:76;;;:::o;5885:72::-;;5947:5;5936:16;;5930:27;;;:::o;5964:167::-;;6066:60;6120:5;6066:60;:::i;:::-;6053:73;;6047:84;;;:::o;6138:131::-;;6240:24;6258:5;6240:24;:::i;:::-;6227:37;;6221:48;;;:::o;6276:117::-;6345:24;6363:5;6345:24;:::i;:::-;6338:5;6335:35;6325:2;;6384:1;6381;6374:12;6325:2;6319:74;:::o;6400:111::-;6466:21;6481:5;6466:21;:::i;:::-;6459:5;6456:32;6446:2;;6502:1;6499;6492:12;6446:2;6440:71;:::o;6518:117::-;6587:24;6605:5;6587:24;:::i;:::-;6580:5;6577:35;6567:2;;6626:1;6623;6616:12;6567:2;6561:74;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.8;\npragma experimental ABIEncoderV2;\n\nimport \"./AVAXFlashLender.sol\";\nimport \"../contracts/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n\n// @notice Used by borrower to flash-borrow ERC20 tokens from ERC20FlashLender\n// @dev Example contract. Do not use. Has not been audited.\ncontract AVAXFlashBorrower is Ownable {\n    using SafeMath for uint256;\n    uint256 arbVal;\n\n    // set the Lender contract address to a trusted ERC20FlashLender\n    AVAXFlashLender public constant avaxFlashLender = AVAXFlashLender(address(0xa1Ba1E7dD7AD2C72A25650ceECaa617319D5Cffb));\n    uint256 constant internal ONE = 1e18;\n\n    \n    // @notice Borrow any ERC20 token that the ERC20FlashLender holds\n    function borrow(address token, uint256 amount) public onlyOwner {    \n       avaxFlashLender.AVAXFlashLoan(token, amount);\n    }\n\n\n    // this is called by ERC20FlashLender after borrower has received the tokens\n    // every ERC20FlashBorrower must implement an `executeOnERC20FlashLoan()` function.\n    function executeOnAVAXFlashLoan(address token, uint256 amount, uint256 debt) external {\n        require(msg.sender == address(avaxFlashLender), \"only lender contract can execute\");\n\n        //... do whatever you want with the tokens to generate profit\n        //assuming BTC as the entry point *BAND_ORACLE.getPrice(\"ETH\",\"SXP\")*BAND_ORACLE.getPrice(\"SXP\",\"BTC\")\n     \n        \n       \n        //since we are on a testnet with no liquidity the liquidity from lender is used for test purposes\n        //frontend will show a demo of the arbitrage value\n        \n        \n        // authorize loan repayment\n        IERC20(token).approve(address(avaxFlashLender), debt);\n    }\n}\n",
  "sourcePath": "/Users/VijayL/Documents/Blockchain/MyProjects/Encode_Club_hackathon/avalanche/truffle/contracts/AVAXFlashBorrower.sol",
  "ast": {
    "absolutePath": "/Users/VijayL/Documents/Blockchain/MyProjects/Encode_Club_hackathon/avalanche/truffle/contracts/AVAXFlashBorrower.sol",
    "exportedSymbols": {
      "AVAXFlashBorrower": [
        74
      ]
    },
    "id": 75,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:0"
      },
      {
        "absolutePath": "/Users/VijayL/Documents/Blockchain/MyProjects/Encode_Club_hackathon/avalanche/truffle/contracts/AVAXFlashLender.sol",
        "file": "./AVAXFlashLender.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 75,
        "sourceUnit": 167,
        "src": "91:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/VijayL/Documents/Blockchain/MyProjects/Encode_Club_hackathon/avalanche/truffle/contracts/SafeMath.sol",
        "file": "../contracts/SafeMath.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 75,
        "sourceUnit": 407,
        "src": "123:35:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 75,
        "sourceUnit": 893,
        "src": "159:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 75,
        "sourceUnit": 1670,
        "src": "212:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 892,
              "src": "440:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$892",
                "typeString": "contract Ownable"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "440:7:0"
          }
        ],
        "contractDependencies": [
          783,
          892
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 74,
        "linearizedBaseContracts": [
          74,
          892,
          783
        ],
        "name": "AVAXFlashBorrower",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 11,
            "libraryName": {
              "contractScope": null,
              "id": 9,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1088,
              "src": "460:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1088",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "454:27:0",
            "typeName": {
              "id": 10,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "473:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 13,
            "mutability": "mutable",
            "name": "arbVal",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 74,
            "src": "486:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "486:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "functionSelector": "740b40e9",
            "id": 21,
            "mutability": "constant",
            "name": "avaxFlashLender",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 74,
            "src": "576:118:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AVAXFlashLender_$166",
              "typeString": "contract AVAXFlashLender"
            },
            "typeName": {
              "contractScope": null,
              "id": 14,
              "name": "AVAXFlashLender",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 166,
              "src": "576:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AVAXFlashLender_$166",
                "typeString": "contract AVAXFlashLender"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "hexValue": "307861314261314537644437414432433732413235363530636545436161363137333139443543666662",
                      "id": 18,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "650:42:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0xa1Ba1E7dD7AD2C72A25650ceECaa617319D5Cffb"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    ],
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "642:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 16,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "642:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      }
                    }
                  },
                  "id": 19,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "642:51:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 15,
                "name": "AVAXFlashLender",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 166,
                "src": "626:15:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_AVAXFlashLender_$166_$",
                  "typeString": "type(contract AVAXFlashLender)"
                }
              },
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "626:68:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AVAXFlashLender_$166",
                "typeString": "contract AVAXFlashLender"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 24,
            "mutability": "constant",
            "name": "ONE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 74,
            "src": "700:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "700:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31653138",
              "id": 23,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "732:4:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "882:64:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 36,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "925:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "932:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33,
                        "name": "avaxFlashLender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "895:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AVAXFlashLender_$166",
                          "typeString": "contract AVAXFlashLender"
                        }
                      },
                      "id": 35,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "AVAXFlashLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 157,
                      "src": "895:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "895:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "895:44:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4b8a3529",
            "id": 41,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 31,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 30,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 841,
                  "src": "872:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "872:9:0"
              }
            ],
            "name": "borrow",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 41,
                  "src": "834:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 41,
                  "src": "849:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "849:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "833:31:0"
            },
            "returnParameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "882:0:0"
            },
            "scope": 74,
            "src": "818:128:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "1208:587:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1226:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 52,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1226:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 55,
                              "name": "avaxFlashLender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "1248:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AVAXFlashLender_$166",
                                "typeString": "contract AVAXFlashLender"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AVAXFlashLender_$166",
                                "typeString": "contract AVAXFlashLender"
                              }
                            ],
                            "id": 54,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1240:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 53,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1240:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1240:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1226:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79206c656e64657220636f6e74726163742063616e2065786563757465",
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1266:34:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81caee3493530be03c8d40fcea4ca3608ec5c65fc8e9bb3f8b31cb50f115006c",
                          "typeString": "literal_string \"only lender contract can execute\""
                        },
                        "value": "only lender contract can execute"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81caee3493530be03c8d40fcea4ca3608ec5c65fc8e9bb3f8b31cb50f115006c",
                          "typeString": "literal_string \"only lender contract can execute\""
                        }
                      ],
                      "id": 50,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1218:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1218:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "1218:83:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 67,
                            "name": "avaxFlashLender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "1765:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AVAXFlashLender_$166",
                              "typeString": "contract AVAXFlashLender"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AVAXFlashLender_$166",
                              "typeString": "contract AVAXFlashLender"
                            }
                          ],
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1757:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 65,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1757:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1757:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 69,
                        "name": "debt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1783:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 62,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "1742:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 61,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1669,
                          "src": "1735:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1669_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1735:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1669",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1638,
                      "src": "1735:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1735:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "1735:53:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "87806593",
            "id": 73,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeOnAVAXFlashLoan",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 73,
                  "src": "1154:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1154:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 73,
                  "src": "1169:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1169:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "mutability": "mutable",
                  "name": "debt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 73,
                  "src": "1185:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1185:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1153:45:0"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1208:0:0"
            },
            "scope": 74,
            "src": "1122:673:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 75,
        "src": "410:1387:0"
      }
    ],
    "src": "32:1766:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/VijayL/Documents/Blockchain/MyProjects/Encode_Club_hackathon/avalanche/truffle/contracts/AVAXFlashBorrower.sol",
    "exportedSymbols": {
      "AVAXFlashBorrower": [
        74
      ]
    },
    "id": 75,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:0"
      },
      {
        "absolutePath": "/Users/VijayL/Documents/Blockchain/MyProjects/Encode_Club_hackathon/avalanche/truffle/contracts/AVAXFlashLender.sol",
        "file": "./AVAXFlashLender.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 75,
        "sourceUnit": 167,
        "src": "91:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/VijayL/Documents/Blockchain/MyProjects/Encode_Club_hackathon/avalanche/truffle/contracts/SafeMath.sol",
        "file": "../contracts/SafeMath.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 75,
        "sourceUnit": 407,
        "src": "123:35:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 75,
        "sourceUnit": 893,
        "src": "159:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 75,
        "sourceUnit": 1670,
        "src": "212:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 892,
              "src": "440:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$892",
                "typeString": "contract Ownable"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "440:7:0"
          }
        ],
        "contractDependencies": [
          783,
          892
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 74,
        "linearizedBaseContracts": [
          74,
          892,
          783
        ],
        "name": "AVAXFlashBorrower",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 11,
            "libraryName": {
              "contractScope": null,
              "id": 9,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1088,
              "src": "460:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1088",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "454:27:0",
            "typeName": {
              "id": 10,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "473:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 13,
            "mutability": "mutable",
            "name": "arbVal",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 74,
            "src": "486:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "486:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "functionSelector": "740b40e9",
            "id": 21,
            "mutability": "constant",
            "name": "avaxFlashLender",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 74,
            "src": "576:118:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AVAXFlashLender_$166",
              "typeString": "contract AVAXFlashLender"
            },
            "typeName": {
              "contractScope": null,
              "id": 14,
              "name": "AVAXFlashLender",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 166,
              "src": "576:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AVAXFlashLender_$166",
                "typeString": "contract AVAXFlashLender"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "hexValue": "307861314261314537644437414432433732413235363530636545436161363137333139443543666662",
                      "id": 18,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "650:42:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0xa1Ba1E7dD7AD2C72A25650ceECaa617319D5Cffb"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    ],
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "642:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 16,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "642:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      }
                    }
                  },
                  "id": 19,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "642:51:0",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 15,
                "name": "AVAXFlashLender",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 166,
                "src": "626:15:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_AVAXFlashLender_$166_$",
                  "typeString": "type(contract AVAXFlashLender)"
                }
              },
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "626:68:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AVAXFlashLender_$166",
                "typeString": "contract AVAXFlashLender"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 24,
            "mutability": "constant",
            "name": "ONE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 74,
            "src": "700:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "700:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31653138",
              "id": 23,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "732:4:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "882:64:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 36,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "925:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "932:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33,
                        "name": "avaxFlashLender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "895:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AVAXFlashLender_$166",
                          "typeString": "contract AVAXFlashLender"
                        }
                      },
                      "id": 35,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "AVAXFlashLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 157,
                      "src": "895:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "895:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "895:44:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4b8a3529",
            "id": 41,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 31,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 30,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 841,
                  "src": "872:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "872:9:0"
              }
            ],
            "name": "borrow",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 41,
                  "src": "834:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 41,
                  "src": "849:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "849:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "833:31:0"
            },
            "returnParameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "882:0:0"
            },
            "scope": 74,
            "src": "818:128:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "1208:587:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1226:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 52,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1226:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 55,
                              "name": "avaxFlashLender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "1248:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AVAXFlashLender_$166",
                                "typeString": "contract AVAXFlashLender"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AVAXFlashLender_$166",
                                "typeString": "contract AVAXFlashLender"
                              }
                            ],
                            "id": 54,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1240:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 53,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1240:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1240:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1226:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79206c656e64657220636f6e74726163742063616e2065786563757465",
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1266:34:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81caee3493530be03c8d40fcea4ca3608ec5c65fc8e9bb3f8b31cb50f115006c",
                          "typeString": "literal_string \"only lender contract can execute\""
                        },
                        "value": "only lender contract can execute"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81caee3493530be03c8d40fcea4ca3608ec5c65fc8e9bb3f8b31cb50f115006c",
                          "typeString": "literal_string \"only lender contract can execute\""
                        }
                      ],
                      "id": 50,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1218:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1218:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "1218:83:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 67,
                            "name": "avaxFlashLender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "1765:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AVAXFlashLender_$166",
                              "typeString": "contract AVAXFlashLender"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AVAXFlashLender_$166",
                              "typeString": "contract AVAXFlashLender"
                            }
                          ],
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1757:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 65,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1757:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1757:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 69,
                        "name": "debt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1783:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 62,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "1742:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 61,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1669,
                          "src": "1735:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1669_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1735:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1669",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1638,
                      "src": "1735:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1735:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "1735:53:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "87806593",
            "id": 73,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeOnAVAXFlashLoan",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 73,
                  "src": "1154:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1154:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 73,
                  "src": "1169:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1169:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "mutability": "mutable",
                  "name": "debt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 73,
                  "src": "1185:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1185:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1153:45:0"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1208:0:0"
            },
            "scope": 74,
            "src": "1122:673:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 75,
        "src": "410:1387:0"
      }
    ],
    "src": "32:1766:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2021-02-02T21:09:20.388Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}